{
	"info": {
		"_postman_id": "aa897125-786b-4012-b7bf-a1cb011b6ade",
		"name": "ColecciÃ³n album",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23454697"
	},
	"item": [
		{
			"name": "album",
			"item": [
				{
					"name": "create album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"album_id\", data.id);\r",
									"\r",
									"pm.test(\"status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"Album perron\",\r\n    \"caratula\": \"https://play-lh.googleusercontent.com/8ddL1kuoNUB5vUvgDVjYY3_6HwQcrg1K2fd_R8soD-e2QYj8fT9cfhfh3G0hnSruLKec=w240-h480-rw\",\r\n    \"fechaLanzamiento\": \"2018-03-29\",\r\n    \"desc\": \"album sus amogus\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/album",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album"
							]
						}
					},
					"response": []
				},
				{
					"name": "create album error nombre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 412\", function () {\r",
									"    pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function() {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.message).to.eql(\"album name must not be null or vacio\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"\",\r\n    \"caratula\": \"https://play-lh.googleusercontent.com/8ddL1kuoNUB5vUvgDVjYY3_6HwQcrg1K2fd_R8soD-e2QYj8fT9cfhfh3G0hnSruLKec=w240-h480-rw\",\r\n    \"fechaLanzamiento\": \"2018-03-29\",\r\n    \"desc\": \"album sus amogus\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/album",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album"
							]
						}
					},
					"response": []
				},
				{
					"name": "create album error desc",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 412\", function () {\r",
									"    pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function() {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.message).to.eql(\"album description must not be null or vacio\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\":\"Album perron amogus\",\r\n    \"caratula\": \"https://play-lh.googleusercontent.com/8ddL1kuoNUB5vUvgDVjYY3_6HwQcrg1K2fd_R8soD-e2QYj8fT9cfhfh3G0hnSruLKec=w240-h480-rw\",\r\n    \"fechaLanzamiento\": \"2018-03-29\",\r\n    \"desc\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/album",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('number of algo > ' + 0, function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"status code is 200\", function () {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/{{album_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"{{album_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One album que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function() {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.message).to.eql(\"album not found or does not exist\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/4df95311-ea23-4ead-a1ce-74bca1dfcad2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"4df95311-ea23-4ead-a1ce-74bca1dfcad2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/{{album_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"{{album_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete album que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function() {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.message).to.eql(\"album not found or does not exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/4df95311-ea23-4ead-a1ce-74bca1dfcad2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"4df95311-ea23-4ead-a1ce-74bca1dfcad2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete album que tiene tracks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//antes de esta prueba es necesario correr la peticion post create track 3 veces a la id que se guardo\r",
									"\r",
									"pm.test(\"status code is 412\", function() {\r",
									"    pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function() {\r",
									"    var data = pm.response.json();\r",
									"    pm.expect(data.message).to.eql(\"album cant be deleted because it has tracks\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/album/{{album_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"album",
								"{{album_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}